<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.janusgraph</groupId>
        <artifactId>janusgraph</artifactId>
        <version>0.6.0-FDB-SNAPSHOT</version>
    </parent>
    <artifactId>janusgraph-foundationdb</artifactId>
    <name>JanusGraph-FoundationDB: Distributed Graph Database</name>
    <url>https://janusgraph.org</url>
    
    <properties>
        <foundationdb.version>6.3.13</foundationdb.version>
        <dependency.plugin.version>2.10</dependency.plugin.version>
        <testcontainers.version>1.14.3</testcontainers.version>
        <top.level.basedir>${basedir}/..</top.level.basedir>
        <test.foundationdb.targetdir>${basedir}/target</test.foundationdb.targetdir>
        <test.skip.default>false</test.skip.default>
        <test.skip.tp>true</test.skip.tp>
        <testcontainers.version>1.15.3</testcontainers.version>
    </properties>
    
    <dependencies>
        <!-- Logging backends. -->
        <!-- Enforce a classpath ordering constraint to ensure log4j is used for logging. -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- End logging backends. -->
        <!-- Compile Dependencies -->
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-backend-testutils</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-test</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.foundationdb</groupId>
            <artifactId>fdb-java</artifactId>
            <version>${foundationdb.version}</version>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <build>
        <directory>${basedir}/target</directory>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>${basedir}/src/test/resources</directory>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <log4j.configuration>file:${project.build.testOutputDirectory}/log4j.properties</log4j.configuration>
                        <test.foundationdb.targetdir>${test.foundationdb.targetdir}</test.foundationdb.targetdir>
                        <excludedGroups>${test.excluded.groups}</excludedGroups>
                    </systemPropertyVariables>
                </configuration>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>foundationdb-test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>test</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>pack-test-jar</id>
                        <!-- prepare-package instead of package forces it to get signed -->
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>janusgraph-release</id>

            <build>
                <plugins>
                    <!-- Redeclare gpg-plugin after jar-plugin to force the test jar to be signed.
                         gpg-plugin runs in the package phase, same as jar-plugin, so the only
                         constraint that guarantees the jar will exist when gpg-plugin is
                         invoked is declaration order in the pom. -->
                    <plugin>
                        <artifactId>maven-jar-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <artifactId>maven-gpg-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
